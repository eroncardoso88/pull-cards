// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("LOCAL_DEV")
  referentialIntegrity = "prisma"
}

enum DeckName {
  MARSEILLE
}

enum Role {
  USER
  ADMIN
}

model User {
  id              String     @id @default(cuid())
  createdAt       DateTime   @default(now())
  email           String     @unique
  password        String
  name            String?
  birthday        DateTime?
  location        String?
  role            Role       @default(USER)
  AnalysisCreated Analysis[]
  Game            Game[]

  @@index([email])
}

model CombinationType {
  id          Int           @id @default(autoincrement())
  description String
  deckName    DeckName      @default(MARSEILLE)
  Combination Combination[]
}

model CombinationSubject {
  id          Int           @id @default(autoincrement())
  description String
  deckName    DeckName      @default(MARSEILLE)
  Combination Combination[]
}

model Combination {
  id                   String             @id @default(uuid())
  name                 String             @unique
  combinationType      CombinationType    @relation(fields: [combinationTypeId], references: [id])
  combinationTypeId    Int
  combinationSubject   CombinationSubject @relation(fields: [combinationSubjectId], references: [id])
  combinationSubjectId Int
  CombinationInfo      CombinationInfo[]
}

model CombinationInfo {
  id               String      @id @default(uuid())
  cardSequenceEnum String      @unique
  combination      Combination @relation(fields: [combinationId], references: [id])
  combinationId    String
  Analysis         Analysis?
  Game             Game[]
}

model Analysis {
  id                String          @id @default(uuid())
  author            User            @relation(fields: [authorId], references: [id])
  authorId          String
  createdAt         DateTime        @default(now())
  combinationInfo   CombinationInfo @relation(fields: [combinationInfoId], references: [id])
  combinationInfoId String          @unique
  textOne           String          @db.Text
  textTwo           String          @db.Text
  textThree         String          @db.Text
  textFour          String          @db.Text
}

model Game {
  id                String          @id @default(cuid())
  userPlayer        User            @relation(fields: [userPlayerId], references: [id])
  userPlayerId      String
  timestamps        DateTime        @default(now())
  combinationInfo   CombinationInfo @relation(fields: [combinationInfoId], references: [id])
  combinationInfoId String
  Review            Review[]
}

model Review {
  id          String   @id @default(uuid())
  gradeNumber Int
  description String   @db.VarChar(4000)
  timestamps  DateTime @default(now())
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      String
}
